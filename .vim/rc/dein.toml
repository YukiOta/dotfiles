[[plugins]]
repo = 'Shougo/dein.vim'

[[plugins]]
repo = 'scrooloose/nerdtree'
hook_add = '''
let NERDTreeShowHidden = 1
let g:nerdtree_tabs_open_on_console_startup=1
nnoremap <silent><C-e> :NERDTreeToggle<CR>
'''

[[plugins]]
repo = 'jistr/vim-nerdtree-tabs'
hook_add = '''
if argc() == 0
let g:nerdtree_tabs_open_on_console_startup = 1
end
'''

[[plugins]]
repo = 'Xuyuanp/nerdtree-git-plugin'


[[plugins]]
repo = 'bronson/vim-trailing-whitespace'
hook_source = '''
autocmd BufWritePre * :FixWhitespace
'''

[[plugins]]
repo = "Yggdroot/indentLine"
hook_add = '''
let g:indentLine_conceallevel  = 2
let g:indentLine_concealcursor = ""
'''

[[plugins]]
repo = 'thinca/vim-quickrun'
hook_add = '''
set splitbelow
set splitright
'''

[[plugins]]
repo = 'rhysd/accelerated-jk'
hook_add = '''
nmap j <Plug>(accelerated_jk_gj)
nmap k <Plug>(accelerated_jk_gk)
'''

[[plugins]]
repo = 'tpope/vim-fugitive'
hook_add = '''
let g:airline#extensions#branch#enabled = 1
'''

[[plugins]]
repo = 'Townk/vim-autoclose'


[[plugins]]
repo = 'scrooloose/syntastic'
hook_add = '''
" error message format
set statusline+=%#warningmsg#
set statusline+=%{SyntasticStatuslineFlag()}
set statusline+=%*

" open location list with error
let g:syntastic_always_populate_loc_list = 1
let g:syntastic_auto_loc_list = 1

" check file with open
let g:syntastic_check_on_open = 1
" check file with save
let g:syntastic_check_on_save = 1

" do not check with wq
let g:syntastic_check_on_wq = 0

let g:syntastic_python_checkers = ["flake8"]
let g:syntastic_javascript_checkers = ['eslint']
'''


[[plugins]]
repo = 'Shougo/deoplete.nvim'
hook_add = '''
let g:deoplete#enable_at_startup = 1
if !has('nvim')
  call dein#add('roxma/nvim-yarp')
  call dein#add('roxma/vim-hug-neovim-rpc')
endif
'''

[[plugins]]
repo = 'Shougo/neosnippet.vim'
hook_add = '''
" Plugin key-mappings.
" Note: It must be "imap" and "smap".  It uses <Plug> mappings.
imap <C-k>     <Plug>(neosnippet_expand_or_jump)
smap <C-k>     <Plug>(neosnippet_expand_or_jump)
xmap <C-k>     <Plug>(neosnippet_expand_target)

" SuperTab like snippets behavior.
"imap <expr><TAB>
" \ pumvisible() ? "\<C-n>" :
" \ neosnippet#expandable_or_jumpable() ?
" \    "\<Plug>(neosnippet_expand_or_jump)" : "\<TAB>"
smap <expr><TAB> neosnippet#expandable_or_jumpable() ?
\ "\<Plug>(neosnippet_expand_or_jump)" : "\<TAB>"

" For conceal markers.
if has('conceal')
set conceallevel=2 concealcursor=niv
endif
'''

[[plugins]]
repo = 'Shougo/neosnippet-snippets'

[[plugins]]
repo = 'rakr/vim-one'

[[plugins]]
repo = 'vim-airline/vim-airline'

[[plugins]]
repo = 'vim-airline/vim-airline-themes'
